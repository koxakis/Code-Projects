$date
	Tue Jul 10 13:21:45 2018
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module test $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module c1 $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( sum [3:0] $end
$var wire 1 " cout $end
$var wire 1 ) cary3 $end
$var wire 1 * cary2 $end
$var wire 1 + cary1 $end
$scope module add0 $end
$var wire 1 , a $end
$var wire 1 - a1 $end
$var wire 1 . a2 $end
$var wire 1 / b $end
$var wire 1 % cin $end
$var wire 1 + cout $end
$var wire 1 0 sum $end
$var wire 1 1 x1 $end
$upscope $end
$scope module add1 $end
$var wire 1 2 a $end
$var wire 1 3 a1 $end
$var wire 1 4 a2 $end
$var wire 1 5 b $end
$var wire 1 % cin $end
$var wire 1 * cout $end
$var wire 1 6 sum $end
$var wire 1 7 x1 $end
$upscope $end
$scope module add2 $end
$var wire 1 8 a $end
$var wire 1 9 a1 $end
$var wire 1 : a2 $end
$var wire 1 ; b $end
$var wire 1 % cin $end
$var wire 1 ) cout $end
$var wire 1 < sum $end
$var wire 1 = x1 $end
$upscope $end
$scope module add3 $end
$var wire 1 > a $end
$var wire 1 ? a1 $end
$var wire 1 @ a2 $end
$var wire 1 A b $end
$var wire 1 % cin $end
$var wire 1 " cout $end
$var wire 1 B sum $end
$var wire 1 C x1 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
b0 (
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#1000
1+
1*
1)
1"
1-
13
19
1?
0.
04
0:
0@
1/
15
1;
1A
01
07
0=
0C
b1111 $
b1111 '
1,
12
18
1>
b1111 #
b1111 &
10
16
1<
b1111 !
b1111 (
1B
1%
#1500
00
06
0<
b0 !
b0 (
0B
0%
#4000
10
0+
1B
0"
11
0-
1C
0?
16
0*
b1111 !
b1111 (
1<
0)
0/
0A
17
03
1=
09
b110 $
b110 '
02
08
b1001 #
b1001 &
#55300
